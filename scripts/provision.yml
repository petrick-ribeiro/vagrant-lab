---
- name: Provisioning Kubernetes Cluster
  hosts: all
  connection: local
  gather_facts: true

  vars:
    bin_path: '/usr/local/bin'
    ssh_keys_path: '/vagrant/keys'
    ubuntu_pkgs:
      - python-apt
      - python3-apt
      - wget
      - curl
      - htop
      - vim
      - git
      - apt-transport-https
      - ca-certificates
      - gnupg2

    containerd_key:
      'https://download.docker.com/linux/debian/gpg'
    containerd_repo:
      'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable'
    containerd_cfg:
      'containerd config default > /etc/containerd/config.toml'

    k8s_key:
      'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    k8s_repo:
      'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main'

  tasks:
    - name: Provisioning Nodes
      become: true
      block:
        - name: Installing Common Pkgs
          apt:
            name: '{{ ubuntu_pkgs }}'
            state: latest
            update_cache: yes

        - name: Setting Up Container Runtime
          become: true
          block:
            - name: Adding public signing key
              apt_key:
                url: "{{ containerd_key }}"

            - name: Add containerd Repo 
              apt_repository:
                repo: "{{ containerd_repo }}"
                state: present

            - name: Installing Containerd
              apt:
                name: containerd.io
                state: present
                update_cache: yes

            - name: Adding containerd config
              shell: '{{ containerd_cfg }}'
              args:
                creates: /etc/containerd/

            - name: Restarting containerd service
              service:
                name: containerd
                state: restarted
                enabled: true

        - name: Setting Up K8s
          become: true
          block:
            - name: Adding public signing key
              apt_key:
                url: "{{ k8s_key }}"

            - name: Adding K8s Repo
              apt_repository:
                repo: "{{ k8s_repo }}"
                state: present

            - name: Installing K8s
              apt:
                name:
                  - kubelet
                  - kubeadm
                  - kubectl
                state: present

            - name: Setting up swap
              block:
                - name: Disabling swap
                  shell: swapoff -a
                - name: Setting fstab config file
                  shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    # - name: Setting Connection and Network
    #   become: true
    #   block:
    #     - name: Create SSH directory if it does not exist
    #       file:
    #         path: /root/.ssh
    #         state: directory
    #
    #     - name: Copying Private Key
    #       copy:
    #         src: '{{ ssh_keys_path }}/vagrant-key'
    #         dest: /root/.ssh/id_rsa
    #         mode: 400
    #
    #     - name: Copying Public Key
    #       copy:
    #         src: '{{ ssh_keys_path }}/vagrant-key.pub'
    #         dest: '{{ item.dest }}'
    #         mode: 400
    #       loop:
    #         - { dest: '/root/.ssh/id_rsa.pub' }
    #         - { dest: '/root/.ssh/authorized_keys' }
    #
    #     - name: Copying SSH Key to /home dir
    #       shell: cat /root/.ssh/id_rsa.pub >> /home/{{ ansible_user_id }}/.ssh/authorized_keys
    #
    #     - name: Setting Hostnames
    #       shell:
    #         cmd: 'echo {{ item.host }} >> /etc/hosts'
    #       loop:
    #         - { host: "'10.0.10.100 manager.lab'" }
    #         - { host: "'10.0.10.110 worker01.lab'" }
    #         - { host: "'10.0.10.120 worker02.lab'" }
